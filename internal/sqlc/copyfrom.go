// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package sqlc

import (
	"context"
)

// iteratorForInsertSets implements pgx.CopyFromSource.
type iteratorForInsertSets struct {
	rows                 []InsertSetsParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertSets) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertSets) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Code,
		r.rows[0].Name,
		r.rows[0].CreatedAt,
		r.rows[0].UpdatedAt,
	}, nil
}

func (r iteratorForInsertSets) Err() error {
	return nil
}

func (q *Queries) InsertSets(ctx context.Context, arg []InsertSetsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"sets"}, []string{"code", "name", "created_at", "updated_at"}, &iteratorForInsertSets{rows: arg})
}
