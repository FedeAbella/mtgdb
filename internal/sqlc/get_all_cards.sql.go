// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_all_cards.sql

package sqlc

import (
	"context"
)

const getAllCards = `-- name: GetAllCards :many
SELECT
    scryfall_id, set_id, name, collector_number, color_identity, colors, language_code, spanish_name, rarity, type_line, scryfall_api_uri, scryfall_web_uri, scryfall_oracle_id, created_at, updated_at
FROM
    cards c
ORDER BY name ASC
`

func (q *Queries) GetAllCards(ctx context.Context) ([]Card, error) {
	rows, err := q.db.Query(ctx, getAllCards)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Card
	for rows.Next() {
		var i Card
		if err := rows.Scan(
			&i.ScryfallID,
			&i.SetID,
			&i.Name,
			&i.CollectorNumber,
			&i.ColorIdentity,
			&i.Colors,
			&i.LanguageCode,
			&i.SpanishName,
			&i.Rarity,
			&i.TypeLine,
			&i.ScryfallApiUri,
			&i.ScryfallWebUri,
			&i.ScryfallOracleID,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
