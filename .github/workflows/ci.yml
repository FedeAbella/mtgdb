name: ci

on:
  pull_request:
    branches: [main]

jobs:
  goose:
    name: Goose Migration
    runs-on: ubuntu-latest
    env:
      DB_URL: "postgres://postgres:postgres@0.0.0.0:5432/postgres"

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: Get Go Dependencies
        run: go get .

      - name: Install goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Goose Up Migration
        run: goose postgres "$DB_URL" up
        working-directory: sql/schema
        env:
          DB_URL: ${{ env.DB_URL }}

      - name: Goose Down Migration
        run: goose postgres "$DB_URL" down
        working-directory: sql/schema
        env:
          DB_URL: ${{ env.DB_URL }}

  linting:
    name: linting
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: Get Go Dependencies
        run: go get .

      - name: go fmt
        run: test -z "$(go fmt ./...)"

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run gosec
        run: gosec ./...

  tests:
    name: build and test
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: Get Go Dependencies
        run: go get .

      - name: Test compile
        run: test -z "$(go build -v ./...)"

      - name: Run go tests
        run: go test ./...
